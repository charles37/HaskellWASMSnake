{"mappings":"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","sources":["node_modules/@bjorn3/browser_wasi_shim/src/wasi_defs.js","node_modules/@bjorn3/browser_wasi_shim/src/fd.js","node_modules/@bjorn3/browser_wasi_shim/src/fs_core.js","node_modules/@bjorn3/browser_wasi_shim/src/fs_fd.js","www/main.js","node_modules/@bjorn3/browser_wasi_shim/src/index.js","node_modules/@bjorn3/browser_wasi_shim/src/wasi.js","node_modules/@bjorn3/browser_wasi_shim/src/strace.js"],"sourcesContent":["// @flow\n\n// Based on https://github.com/bytecodealliance/wasi/tree/d3c7a34193cb33d994b11104b22d234530232b5f\n\nexport const FD_STDIN = 0;\nexport const FD_STDOUT = 1;\nexport const FD_STDERR = 2;\n\nexport const CLOCKID_REALTIME = 0;\nexport const CLOCKID_MONOTONIC = 1;\nexport const CLOCKID_PROCESS_CPUTIME_ID = 2;\nexport const CLOCKID_THREAD_CPUTIME_ID = 3;\n\nexport const ERRNO_SUCCESS = 0;\nexport const ERRNO_2BIG = 1;\nexport const ERRNO_ACCES = 2;\nexport const ERRNO_ADDRINUSE = 3;\nexport const ERRNO_ADDRNOTAVAIL = 4;\nexport const ERRNO_AFNOSUPPORT = 5;\nexport const ERRNO_AGAIN = 6;\nexport const ERRNO_ALREADY = 7;\nexport const ERRNO_BADF = 8;\nexport const ERRNO_BADMSG = 9;\nexport const ERRNO_BUSY = 10;\nexport const ERRNO_CANCELED = 11;\nexport const ERRNO_CHILD = 12;\nexport const ERRNO_CONNABORTED = 13;\nexport const ERRNO_CONNREFUSED = 14;\nexport const ERRNO_CONNRESET = 15;\nexport const ERRNO_DEADLK = 16;\nexport const ERRNO_DESTADDRREQ = 17;\nexport const ERRNO_DOM = 18;\nexport const ERRNO_DQUOT = 19;\nexport const ERRNO_EXIST = 20;\nexport const ERRNO_FAULT = 21;\nexport const ERRNO_FBIG = 22;\nexport const ERRNO_HOSTUNREACH = 23;\nexport const ERRNO_IDRM = 24;\nexport const ERRNO_ILSEQ = 25;\nexport const ERRNO_INPROGRESS = 26;\nexport const ERRNO_INTR = 27;\nexport const ERRNO_INVAL = 28;\nexport const ERRNO_IO = 29;\nexport const ERRNO_ISCONN = 30;\nexport const ERRNO_ISDIR = 31;\nexport const ERRNO_LOOP = 32;\nexport const ERRNO_MFILE = 33;\nexport const ERRNO_MLINK = 34;\nexport const ERRNO_MSGSIZE = 35;\nexport const ERRNO_MULTIHOP = 36;\nexport const ERRNO_NAMETOOLONG = 37;\nexport const ERRNO_NETDOWN = 38;\nexport const ERRNO_NETRESET = 39;\nexport const ERRNO_NETUNREACH = 40;\nexport const ERRNO_NFILE = 41;\nexport const ERRNO_NOBUFS = 42;\nexport const ERRNO_NODEV = 43;\nexport const ERRNO_NOENT = 44;\nexport const ERRNO_NOEXEC = 45;\nexport const ERRNO_NOLCK = 46;\nexport const ERRNO_NOLINK = 47;\nexport const ERRNO_NOMEM = 48;\nexport const ERRNO_NOMSG = 49;\nexport const ERRNO_NOPROTOOPT = 50;\nexport const ERRNO_NOSPC = 51;\nexport const ERRNO_NOSYS = 52;\nexport const ERRNO_NOTCONN = 53;\nexport const ERRNO_NOTDIR = 54;\nexport const ERRNO_NOTEMPTY = 55;\nexport const ERRNO_NOTRECOVERABLE = 56;\nexport const ERRNO_NOTSOCK = 57;\nexport const ERRNO_NOTSUP = 58;\nexport const ERRNO_NOTTY = 59;\nexport const ERRNO_NXIO = 60;\nexport const ERRNO_OVERFLOW = 61;\nexport const ERRNO_OWNERDEAD = 62;\nexport const ERRNO_PERM = 63;\nexport const ERRNO_PIPE = 64;\nexport const ERRNO_PROTO = 65;\nexport const ERRNO_PROTONOSUPPORT = 66;\nexport const ERRNO_PROTOTYPE = 67;\nexport const ERRNO_RANGE = 68;\nexport const ERRNO_ROFS = 69;\nexport const ERRNO_SPIPE = 70;\nexport const ERRNO_SRCH = 71;\nexport const ERRNO_STALE = 72;\nexport const ERRNO_TIMEDOUT = 73;\nexport const ERRNO_TXTBSY = 74;\nexport const ERRNO_XDEV = 75;\nexport const ERRNO_NOTCAPABLE = 76;\n\nexport const RIGHTS_FD_DATASYNC = 1 << 0;\nexport const RIGHTS_FD_READ = 1 << 1;\nexport const RIGHTS_FD_SEEK = 1 << 2;\nexport const RIGHTS_FD_FDSTAT_SET_FLAGS = 1 << 3;\nexport const RIGHTS_FD_SYNC = 1 << 4;\nexport const RIGHTS_FD_TELL = 1 << 5;\nexport const RIGHTS_FD_WRITE = 1 << 6;\nexport const RIGHTS_FD_ADVISE = 1 << 7;\nexport const RIGHTS_FD_ALLOCATE = 1 << 8;\nexport const RIGHTS_PATH_CREATE_DIRECTORY = 1 << 9;\nexport const RIGHTS_PATH_CREATE_FILE = 1 << 10;\nexport const RIGHTS_PATH_LINK_SOURCE = 1 << 11;\nexport const RIGHTS_PATH_LINK_TARGET = 1 << 12;\nexport const RIGHTS_PATH_OPEN = 1 << 13;\nexport const RIGHTS_FD_READDIR = 1 << 14;\nexport const RIGHTS_PATH_READLINK = 1 << 15;\nexport const RIGHTS_PATH_RENAME_SOURCE = 1 << 16;\nexport const RIGHTS_PATH_RENAME_TARGET = 1 << 17;\nexport const RIGHTS_PATH_FILESTAT_GET = 1 << 18;\nexport const RIGHTS_PATH_FILESTAT_SET_SIZE = 1 << 19;\nexport const RIGHTS_PATH_FILESTAT_SET_TIMES = 1 << 20;\nexport const RIGHTS_FD_FILESTAT_GET = 1 << 21;\nexport const RIGHTS_FD_FILESTAT_SET_SIZE = 1 << 22;\nexport const RIGHTS_FD_FILESTAT_SET_TIMES = 1 << 23;\nexport const RIGHTS_PATH_SYMLINK = 1 << 24;\nexport const RIGHTS_PATH_REMOVE_DIRECTORY = 1 << 25;\nexport const RIGHTS_PATH_UNLINK_FILE = 1 << 26;\nexport const RIGHTS_POLL_FD_READWRITE = 1 << 27;\nexport const RIGHTS_SOCK_SHUTDOWN = 1 << 28;\n\nexport class Iovec {\n    /*:: buf: number*/;\n    /*:: buf_len: number*/;\n\n    static read_bytes(view/*: DataView*/, ptr/*: number*/)/*: Iovec*/ {\n        let iovec = new Iovec();\n        iovec.buf = view.getUint32(ptr, true);\n        iovec.buf_len = view.getUint32(ptr + 4, true);\n        return iovec;\n    }\n\n    static read_bytes_array(view/*: DataView*/, ptr/*: number*/, len/*: number*/)/*: Array<Iovec>*/ {\n        let iovecs = [];\n        for (let i = 0; i < len; i++) {\n            iovecs.push(Iovec.read_bytes(view, ptr + 8 * i));\n        }\n        return iovecs;\n    }\n}\n\nexport class Ciovec {\n    /*:: buf: number*/;\n    /*:: buf_len: number*/;\n\n    static read_bytes(view/*: DataView*/, ptr/*: number*/)/*: Ciovec*/ {\n        let iovec = new Ciovec();\n        iovec.buf = view.getUint32(ptr, true);\n        iovec.buf_len = view.getUint32(ptr + 4, true);\n        return iovec;\n    }\n\n    static read_bytes_array(view/*: DataView*/, ptr/*: number*/, len/*: number*/)/*: Array<Ciovec>*/ {\n        let iovecs = [];\n        for (let i = 0; i < len; i++) {\n            iovecs.push(Ciovec.read_bytes(view, ptr + 8 * i));\n        }\n        return iovecs;\n    }\n}\n\nexport const WHENCE_SET = 0;\nexport const WHENCE_CUR = 1;\nexport const WHENCE_END = 2;\n\nexport const FILETYPE_UNKNOWN = 0;\nexport const FILETYPE_BLOCK_DEVICE = 1;\nexport const FILETYPE_CHARACTER_DEVICE = 2;\nexport const FILETYPE_DIRECTORY = 3;\nexport const FILETYPE_REGULAR_FILE = 4;\nexport const FILETYPE_SOCKET_DGRAM = 5;\nexport const FILETYPE_SOCKET_STREAM = 6;\nexport const FILETYPE_SYMBOLIC_LINK = 7;\n\nexport class Dirent {\n    /*:: d_next: BigInt*/;\n    d_ino/*: BigInt*/ = 1n;\n    /*:: d_namlen: number*/;\n    /*:: d_type: number*/;\n    /*:: dir_name: Uint8Array*/;\n\n    constructor(next_cookie/*: BigInt*/, name/*: string*/, type/*: number*/) {\n        let encoded_name = new TextEncoder(\"utf-8\").encode(name);\n\n        this.d_next = next_cookie;\n        this.d_namlen = encoded_name.byteLength;\n        this.d_type = type;\n        this.dir_name = encoded_name;\n    }\n\n    length()/*: number*/ {\n        return 24 + this.dir_name.byteLength;\n    }\n\n    write_bytes(view/*: DataView*/, view8/*: Uint8Array*/, ptr/*: number*/) {\n        view.setBigUint64(ptr, this.d_next, true);\n        view.setBigUint64(ptr + 8, this.d_ino, true);\n        view.setUint32(ptr + 16, this.dir_name.length, true); // d_namlen\n        view.setUint8(ptr + 20, this.d_type);\n        view8.set(this.dir_name, ptr + 24);\n    }\n}\n\nexport const ADVICE_NORMAL = 0;\nexport const ADVICE_SEQUENTIAL = 1;\nexport const ADVICE_RANDOM = 2;\nexport const ADVICE_WILLNEED = 3;\nexport const ADVICE_DONTNEED = 4;\nexport const ADVICE_NOREUSE = 5;\n\nexport const FDFLAGS_APPEND = 1 << 0;\nexport const FDFLAGS_DSYNC = 1 << 1;\nexport const FDFLAGS_NONBLOCK = 1 << 2;\nexport const FDFLAGS_RSYNC = 1 << 3;\nexport const FDFLAGS_SYNC = 1 << 4;\n\nexport class Fdstat {\n    /*:: fs_filetype: number*/;\n    /*:: fs_flags: number*/;\n    fs_rights_base/*: BigInt*/ = 0n;\n    fs_rights_inherited/*: BigInt*/ = 0n;\n\n    constructor(filetype/*: number*/, flags/*: number*/) {\n        this.fs_filetype = filetype;\n        this.fs_flags = flags;\n    }\n\n    write_bytes(view/*: DataView*/, ptr/*: number*/) {\n        view.setUint8(ptr, this.fs_filetype);\n        view.setUint16(ptr + 2, this.fs_flags, true);\n        view.setBigUint64(ptr + 8, this.fs_rights_base, true);\n        view.setBigUint64(ptr + 16, this.fs_rights_inherited, true);\n    }\n}\n\nexport const FSTFLAGS_ATIM = 1 << 0;\nexport const FSTFLAGS_ATIM_NOW = 1 << 1;\nexport const FSTFLAGS_MTIM = 1 << 2;\nexport const FSTFLAGS_MTIM_NOW = 1 << 3;\n\nexport const OFLAGS_CREAT = 1 << 0;\nexport const OFLAGS_DIRECTORY = 1 << 1;\nexport const OFLAGS_EXCL = 1 << 2;\nexport const OFLAGS_TRUNC = 1 << 3;\n\nexport class Filestat {\n    dev/*: BigInt*/ = 0n;\n    ino/*: BigInt*/ = 0n;\n    /*:: filetype: number*/;\n    nlink/*: BigInt*/ = 0n;\n    /*:: size: BigInt*/;\n    atim/*: BigInt*/ = 0n;\n    mtim/*: BigInt*/ = 0n;\n    ctim/*: BigInt*/ = 0n;\n\n    constructor(filetype/*: number*/, size/*: number | BigInt*/) {\n        this.filetype = filetype;\n        this.size = BigInt(size);\n    }\n\n    write_bytes(view/*: DataView*/, ptr/*: number*/) {\n        view.setBigUint64(ptr, this.dev, true);\n        view.setBigUint64(ptr + 8, this.ino, true);\n        view.setUint8(ptr + 16, this.filetype);\n        view.setBigUint64(ptr + 24, this.nlink, true);\n        view.setBigUint64(ptr + 32, this.size, true);\n        view.setBigUint64(ptr + 38, this.atim, true);\n        view.setBigUint64(ptr + 46, this.mtim, true);\n        view.setBigUint64(ptr + 52, this.ctim, true);\n    }\n}\n\nexport const EVENTTYPE_CLOCK = 0;\nexport const EVENTTYPE_FD_READ = 1;\nexport const EVENTTYPE_FD_WRITE = 2;\n\nexport const EVENTRWFLAGS_FD_READWRITE_HANGUP = 1 << 0;\n\nexport const SUBCLOCKFLAGS_SUBSCRIPTION_CLOCK_ABSTIME = 1 << 0;\n\nexport const SIGNAL_NONE = 0;\nexport const SIGNAL_HUP = 1;\nexport const SIGNAL_INT = 2;\nexport const SIGNAL_QUIT = 3;\nexport const SIGNAL_ILL = 4;\nexport const SIGNAL_TRAP = 5;\nexport const SIGNAL_ABRT = 6;\nexport const SIGNAL_BUS = 7;\nexport const SIGNAL_FPE = 8;\nexport const SIGNAL_KILL = 9;\nexport const SIGNAL_USR1 = 10;\nexport const SIGNAL_SEGV = 11;\nexport const SIGNAL_USR2 = 12;\nexport const SIGNAL_PIPE = 13;\nexport const SIGNAL_ALRM = 14;\nexport const SIGNAL_TERM = 15;\nexport const SIGNAL_CHLD = 16;\nexport const SIGNAL_CONT = 17;\nexport const SIGNAL_STOP = 18;\nexport const SIGNAL_TSTP = 19;\nexport const SIGNAL_TTIN = 20;\nexport const SIGNAL_TTOU = 21;\nexport const SIGNAL_URG = 22;\nexport const SIGNAL_XCPU = 23;\nexport const SIGNAL_XFSZ = 24;\nexport const SIGNAL_VTALRM = 25;\nexport const SIGNAL_PROF = 26;\nexport const SIGNAL_WINCH = 27;\nexport const SIGNAL_POLL = 28;\nexport const SIGNAL_PWR = 29;\nexport const SIGNAL_SYS = 30;\n\nexport const RIFLAGS_RECV_PEEK = 1 << 0;\nexport const RIFLAGS_RECV_WAITALL = 1 << 1;\n\nexport const ROFLAGS_RECV_DATA_TRUNCATED = 1 << 0;\n\nexport const SDFLAGS_RD = 1 << 0;\nexport const SDFLAGS_WR = 1 << 1;\n\nexport const PREOPENTYPE_DIR = 0;\n\nexport class PrestatDir {\n    /*:: pr_name_len: number*/;\n\n    constructor(name_len/*: number*/) {\n        this.pr_name_len = name_len;\n    }\n\n    write_bytes(view/*: DataView*/, ptr/*: number*/) {\n        view.setUint32(ptr, this.pr_name_len, true);\n    }\n}\n\nexport class Prestat {\n    /*:: tag: number*/;\n    /*:: inner: PrestatDir*/;\n\n    static dir(name_len/*: number*/)/*: Prestat*/ {\n        let prestat = new Prestat();\n        prestat.tag = PREOPENTYPE_DIR;\n        prestat.inner = new PrestatDir(name_len);\n        return prestat;\n    }\n\n    write_bytes(view/*: DataView*/, ptr/*: number*/) {\n        view.setUint32(ptr, this.tag, true);\n        this.inner.write_bytes(view, ptr + 4);\n    }\n}\n","// @flow\n\nimport * as wasi from \"./wasi_defs.js\";\n\nexport class Fd {\n    fd_advise(offset/*: number*/, len/*: BigInt*/, advice/*: number*/)/*: number*/ {\n        return -1;\n    }\n    fd_allocate(offset/*: number*/, len/*: BigInt*/)/*: number*/ {\n        return -1;\n    }\n    fd_close()/*: number*/ {\n        return -1;\n    }\n    fd_datasync()/*: number*/ {\n        return -1;\n    }\n    fd_fdstat_get()/*: { ret: number, fdstat: wasi.Fdstat | null }*/ {\n        return { ret: -1, fdstat: null };\n    }\n    fd_fdstat_set_flags(flags/*: number*/)/*: number*/ {\n        return -1;\n    }\n    fd_fdstat_set_rights(fs_rights_base/*: BigInt*/, fs_rights_inheriting/*: BigInt*/)/*: number*/ {\n        return -1;\n    }\n    fd_filestat_get() {\n        return { ret: -1, filestat: null };\n    }\n    fd_filestat_set_size(size)/*: number*/ {\n        return -1;\n    }\n    fd_filestat_set_times(atim, mtim, fst_flags)/*: number*/ {\n        return -1;\n    }\n    fd_pread(view8/*: Uint8Array*/, iovs, offset) {\n        return { ret: -1, nread: 0 };\n    }\n    fd_prestat_get() {\n        return { ret: -1, prestat: null };\n    }\n    fd_prestat_dir_name(path_ptr/*: number*/, path_len/*: number*/) {\n        return { ret: -1, prestat_dir_name: null };\n    }\n    fd_pwrite(view8/*: Uint8Array*/, iovs, offset) {\n        return { ret: -1, nwritten: 0 };\n    }\n    fd_read(view8/*: Uint8Array*/, iovs/*: Array<wasi.Iovec>*/)/*: { ret: number, nread: number }*/ {\n        return { ret: -1, nread: 0 };\n    }\n    fd_readdir_single(cookie/*: BigInt*/) {\n        return { ret: -1, dirent: null };\n    }\n    fd_seek(offset, whence) {\n        return { ret: -1, offset: 0 };\n    }\n    fd_sync()/*: number*/ {\n        return -1;\n    }\n    fd_tell() {\n        return { ret: -1, offset: 0 };\n    }\n    fd_write(view8, iovs) {\n        return { ret: -1, nwritten: 0 };\n    }\n    path_create_directory(path)/*: number*/ {\n        return -1;\n    }\n    path_filestat_get(flags, path) {\n        return { ret: -1, filestat: null };\n    }\n    path_filestat_set_times(flags, path, atim, mtim, fst_flags) {\n        return -1;\n    }\n    path_link(old_fd, old_flags, old_path, new_path)/*: number*/ {\n        return -1;\n    }\n    path_open(dirflags, path, oflags, fs_rights_base, fs_rights_inheriting, fdflags) {\n        return { ret: -1, fd_obj: null };\n    }\n    path_readlink(path) {\n        return { ret: -1, data: null };\n    }\n    path_remove_directory(path)/*: number*/ {\n        return -1;\n    }\n    path_rename(old_path, new_fd, new_path)/*: number*/ {\n        return -1;\n    }\n    path_symlink(old_path, new_path)/*: number*/ {\n        return -1;\n    }\n    path_unlink_file(path)/*: number*/ {\n        return -1;\n    }\n}\n","// @flow\n\nimport * as wasi from \"./wasi_defs.js\";\n\nexport class File {\n    /*:: data: Uint8Array*/;\n\n    constructor(data/*: ArrayBuffer | Uint8Array*/) {\n        console.log(data);\n        this.data = new Uint8Array(data);\n    }\n\n    get size()/*: number*/ {\n        return this.data.byteLength;\n    }\n\n    stat()/*: wasi.Filestat*/ {\n        return new wasi.Filestat(wasi.FILETYPE_REGULAR_FILE, this.size);\n    }\n\n    truncate() {\n        this.data = new Uint8Array([]);\n    }\n}\n\nexport class Directory {\n    /*:: contents: { [string]: File | Directory } */;\n\n    constructor(contents/*: { [string]: File | Directory }*/) {\n        this.contents = contents;\n    }\n\n    stat()/*: wasi.Filestat*/ {\n        return new wasi.Filestat(wasi.FILETYPE_DIRECTORY, 0);\n    }\n\n    get_entry_for_path(path/*: string*/)/*: File | Directory | null*/ {\n        let entry = this;\n        for (let component of path.split(\"/\")) {\n            if (component == \"\") break;\n            if (entry.contents[component] != undefined) {\n                entry = entry.contents[component];\n            } else {\n                console.log(component);\n                return null;\n            }\n        }\n        return entry;\n    }\n\n    create_entry_for_path(path/*: string*/)/*: File | Directory*/ {\n        // FIXME fix type errors\n        let entry = this;\n        let components/*: Array<string>*/ = path.split(\"/\").filter((component) => component != \"/\");\n        for (let i = 0; i < components.length; i++) {\n            let component = components[i];\n            if (entry.contents[component] != undefined) {\n                entry = entry.contents[component];\n            } else {\n                console.log(\"create\", component);\n                if (i == components.length - 1) {\n                    entry.contents[component] = new File(new ArrayBuffer(0));\n                } else {\n                    entry.contents[component] = new Directory({});\n                }\n                entry = entry.contents[component];\n            }\n        }\n        return entry;\n    }\n}\n","// @flow\n\nimport * as wasi from \"./wasi_defs.js\";\nimport { File, Directory } from \"./fs_core.js\";\nimport { Fd } from \"./fd.js\";\n\nexport class OpenFile extends Fd {\n    /*:: file: File*/;\n    file_pos/*: BigInt*/ = 0n;\n\n    constructor(file/*: File*/) {\n        super();\n        this.file = file;\n    }\n\n    fd_fdstat_get()/*: { ret: number, fdstat: wasi.Fdstat | null }*/ {\n        return { ret: 0, fdstat: new wasi.Fdstat(wasi.FILETYPE_REGULAR_FILE, 0) };\n    }\n\n    fd_read(view8/*: Uint8Array*/, iovs/*: Array<wasi.Iovec>*/)/*: { ret: number, nread: number }*/ {\n        let nread = 0;\n        for (let iovec of iovs) {\n            if (this.file_pos < this.file.data.byteLength) {\n                let slice = this.file.data.slice(Number(this.file_pos), Number(this.file_pos + BigInt(iovec.buf_len)));\n                view8.set(slice, iovec.buf);\n                this.file_pos += BigInt(slice.length);\n                nread += slice.length;\n            } else {\n                break;\n            }\n        }\n        return { ret: 0, nread };\n    }\n\n    fd_seek(offset/*: BigInt*/, whence/*: number*/)/*: {ret: number, offset: BigInt }*/ {\n        let calculated_offset;\n        switch (whence) {\n            case wasi.WHENCE_SET:\n                calculated_offset = offset;\n                break;\n            case wasi.WHENCE_CUR:\n                calculated_offset = this.file_pos + offset;\n                break;\n            case wasi.WHENCE_END:\n                calculated_offset = this.file.data.byteLength + offset;\n                break;\n            default:\n                return { ret: wasi.ERRNO_INVAL, offset: 0 };\n        }\n\n        if (calculated_offset < 0) {\n            return { ret: wasi.ERRNO_INVAL, offset: 0 };\n        }\n\n        this.file_pos = calculated_offset;\n        return { ret: 0, offset: calculated_offset };\n    }\n\n    fd_write(view8/*: Uint8Array*/, iovs/*: Array<wasi.Ciovec>*/)/*: { ret: number, nwritten: number }*/ {\n        let nwritten = 0;\n        for (let iovec of iovs) {\n            let buffer = view8.slice(iovec.buf, iovec.buf + iovec.buf_len);\n            if (this.file_pos + BigInt(buffer.byteLength) > this.file.size) {\n                let old = this.file.data;\n                this.file.data = new Uint8Array(Number(this.file_pos + BigInt(buffer.byteLength)));\n                this.file.data.set(old);\n            }\n            this.file.data.set(\n                buffer.slice(\n                    0,\n                    this.file.size - Number(this.file_pos),\n                ), Number(this.file_pos)\n            );\n            this.file_pos += BigInt(buffer.byteLength);\n            nwritten += iovec.buf_len;\n        }\n        return { ret: 0, nwritten };\n    }\n\n    fd_filestat_get()/*: { ret: number, stat: wasi.Filestat }*/ {\n        return { ret: 0, stat: this.file.stat() };\n    }\n}\n\nexport class OpenDirectory extends Fd {\n    /*:: dir: Directory*/;\n\n    constructor(dir/*: Directory */) {\n        super();\n        this.dir = dir;\n    }\n\n    fd_fdstat_get()/*: { ret: number, fdstat: wasi.Fdstat | null }*/ {\n        return { ret: 0, fdstat: new wasi.Fdstat(wasi.FILETYPE_DIRECTORY, 0) };\n    }\n\n    fd_readdir_single(cookie/*: BigInt*/)/*: { ret: number, dirent: wasi.Dirent | null }*/ {\n        console.log(cookie, Object.keys(this.dir.contents).slice(Number(cookie)));\n        if (cookie >= BigInt(Object.keys(this.dir.contents).length)) {\n            return { ret: 0, dirent: null };\n        }\n\n        let name = Object.keys(this.dir.contents)[Number(cookie)];\n        let entry = this.dir.contents[name];\n        let encoded_name = new TextEncoder(\"utf-8\").encode(name);\n\n        return { ret: 0, dirent: new wasi.Dirent(cookie + 1n, name, entry.stat().filetype) };\n    }\n\n    path_filestat_get(flags/*: number*/, path/*: string*/)/*: { ret: number, filestat: wasi.Filestat | null }*/ {\n        let entry = this.dir.get_entry_for_path(path);\n        if (entry == null) {\n            return { ret: -1, filestat: null };\n        }\n        return { ret: 0, filestat: entry.stat() };\n    }\n\n    path_open(\n        dirflags/*: number*/,\n        path/*: string*/,\n        oflags/*: number*/,\n        fs_rights_base/*: BigInt*/,\n        fs_rights_inheriting/*: BigInt*/,\n        fd_flags/*: number*/\n    )/*: { ret: number, fd_obj: Fd | null }*/ {\n        let entry = this.dir.get_entry_for_path(path);\n        if (entry == null) {\n            if ((oflags & wasi.OFLAGS_CREAT) == wasi.OFLAGS_CREAT) {\n                entry = this.dir.create_entry_for_path(path);\n            } else {\n                return { ret: -1, fd_obj: null };\n            }\n        } else if ((oflags & wasi.OFLAGS_EXCL) == wasi.OFLAGS_EXCL) {\n            return { ret: -1, fd_obj: null };\n        }\n        if ((oflags & wasi.OFLAGS_DIRECTORY) == wasi.OFLAGS_DIRECTORY && entry.stat().filetype != wasi.FILETYPE_DIRECTORY) {\n            return { ret: -1, fd_obj: null };\n        }\n        if ((oflags & wasi.OFLAGS_TRUNC) == wasi.OFLAGS_TRUNC) {\n            entry.truncate();\n        }\n        // FIXME handle this more elegantly\n        if (entry instanceof File) {\n            return { ret: 0, fd_obj: new OpenFile(entry) };\n        } else if (entry instanceof Directory) {\n            return { ret: 0, fd_obj: new OpenDirectory(entry) };\n        } else {\n            throw \"dir entry neither file nor dir\";\n        }\n    }\n}\n\nexport class PreopenDirectory extends OpenDirectory {\n    /*:: prestat_name: Uint8Array*/;\n\n    constructor(name/*: string*/, contents/*: { [string]: File | Directory }*/) {\n        super(new Directory(contents));\n        this.prestat_name = new TextEncoder(\"utf-8\").encode(name);\n    }\n\n    fd_prestat_get()/*: { ret: number, prestat: wasi.Prestat }*/ {\n        return {\n            ret: 0, prestat: wasi.Prestat.dir(this.prestat_name.length)\n        };\n    }\n\n    fd_prestat_dir_name()/*: { ret: number, prestat_dir_name: Uint8Array }*/ {\n        return {\n            ret: 0, prestat_dir_name: this.prestat_name\n        };\n    }\n}\n","/* global wasm, wasi, inst */\n// import { TextDecoder, TextEncoder } from \"util\";\nimport { WASI } from \"@bjorn3/browser_wasi_shim/src\";\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Haskell Wasm Utilities\n////////////////////////////////////////////////////////////////////////////////\n\nfunction bufferAt(pos, len) {\n    return new Uint8Array(exports.memory.buffer, pos, len);\n}\n\nfunction cstringBufferAt(cstr) {\n    let b = new Uint8Array(exports.memory.buffer, cstr);\n    let l = b.findIndex(i => i == 0, b);\n    return bufferAt(cstr, l);\n}\n\nfunction withCStrings(strs, op) {\n    const cstrs = strs.map(str => {\n        const s = new TextEncoder().encode(str);\n        const l = s.length + 1;\n        const p = exports.callocBuffer(l);\n        const b = new bufferAt(p, l);\n        b.set(s);\n        return p;\n    });\n    const r = op(cstrs);\n    strs.forEach(exports.freeBuffer);\n    return r;\n}\n\nfunction withCString(str, op) {\n    return withCStrings([str], strs => op(strs[0]));\n}\n\nfunction fromCString(cstr) {\n    const s = new TextDecoder(\"utf8\").decode(cstringBufferAt(cstr));\n    exports.freeBuffer(cstr);\n    return s;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Application APIs\n////////////////////////////////////////////////////////////////////////////////\n\nfunction echo(str) {\n    return fromCString(withCString(str, cstr => exports.echo(cstr)));\n}\n\nfunction store_size() {\n    return exports.size();\n}\n\nfunction store_save(k, v) {\n    withCStrings([k,v], a => exports.save(a[0], a[1]));\n}\n\nfunction store_load(k) {\n    return fromCString(withCString(k, k => exports.load(k)));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Application Logic\n////////////////////////////////////////////////////////////////////////////////\n\nconst canvas = document.getElementById(\"canvas\");\nconsole.log(canvas);\n\nconst width = 20;\nconst height = 20;\n\nconst ctx = canvas.getContext(\"2d\");\nconst cellSize = 20;\n\ncanvas.width = width * cellSize;\ncanvas.height = height * cellSize;\n\n\nconst wasi = new WASI([], [], []);\n\nfunction test() {\n    console.log(\"echo:\", echo(\"hello world\"));\n    console.log(\"size before\", store_size());\n    store_save(\"a\", \"42\");\n    store_save(\"b\", \"21\");\n    console.log(\"size after\", store_size());\n    console.log(\"a=\", store_load(\"a\"));\n    console.log(\"b=\", store_load(\"b\"));\n    console.log(\"c=\", store_load(\"c\"));\n}\nconst wasiImportObj = { wasi_snapshot_preview1: wasi.wasiImport };\nconst wasm = await WebAssembly.instantiateStreaming(fetch(\"HaskellWASMSnake.wasm\"), wasiImportObj);\nwasi.inst = wasm.instance;\nconst exports = wasm.instance.exports;\n// initialize Haskell Wasm Reactor Module\nexports._initialize();\nexports.hs_init(0, 0);\n\n\n(async function () {\n    \n    // load Haskell Wasm Reactor Module\n    // window.wasm = await WebAssembly.compileStreaming(fetch(\"HaskellWASMSnake.wasm\"));\n    // window.wasi = new WASI([], [\"LC_ALL=en_US.utf-8\"], [/* fds */]);\n    // window.inst = await WebAssembly.instantiate(wasm, {\n    //     \"wasi_snapshot_preview1\": wasi.wasiImport,\n    // });\n    window.isRunning = true;\n    test();\n    update();\n})()\n\n\ndocument.addEventListener(\"keydown\", event => {\n    window.direction = event.key;\n    console.log(event.key);\n});\n\n// window.start = () => {\n//     window.isRunning = true;\n//     console.log('start');\n//     console.log(window);\n//     update();\n// };\n\nwindow.stop = () => {\n    window.isRunning = false;\n};\n\n// function init() {\n//     window.start();\n// }\n\n\nasync function update() {\n\n    if (!window.direction) {\n        window.direction = 's';\n    }\n\n    store_save(\"input\", window.direction);\n    exports.updateGameStateIO();\n    const output = store_load(\"output\");\n\n    draw(output);\n    // delay\n    await new Promise(resolve => setTimeout(resolve, 150));\n\n    console.log('update');\n    console.log(window);\n    if (window.isRunning) {\n        window.requestAnimationFrame(update);\n    }\n}\n\nfunction draw(gameStateStr) {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    const rows = gameStateStr.trim().split('\\n');\n    console.log(rows)\n\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n        const c = rows[y][x];\n        if (c === '*') {\n            ctx.fillStyle = 'black';\n            ctx.fillRect(x * cellSize, y * cellSize, cellSize, cellSize);\n        } else if (c === '@') {\n            ctx.fillStyle = 'red';\n            ctx.fillRect(x * cellSize, y * cellSize, cellSize, cellSize);\n        }\n\n        }\n    }\n}\n\n\n","import WASI from \"./wasi.js\"\nimport { File } from \"./fs_core.js\"\nimport { PreopenDirectory } from \"./fs_fd.js\"\nimport { strace } from \"./strace.js\"\n\nmodule.exports = {\n    WASI,\n    File,\n    PreopenDirectory,\n    strace,\n}\n\n","// @flow\n\nimport * as wasi from \"./wasi_defs.js\";\nimport { Fd } from \"./fd.js\";\n\nexport default class WASI {\n    args/*: Array<string>*/ = [];\n    env/*: Array<string>*/ = [];\n    fds/*: Array<Fd>*/ = [];\n    inst/*: { +exports: { memory: WebAssembly$Memory } }*/;\n    wasiImport/*: { [string]: (...args: Array<any>) => mixed }*/;\n\n    start(instance/*: { exports: { memory: WebAssembly$Memory, _start: () => mixed } }*/) {\n        this.inst = instance;\n        instance.exports._start();\n    }\n\n    constructor(args/*: Array<string>*/, env/*: Array<string>*/, fds/*: Array<Fd>*/) {\n        this.args = args;\n        this.env = env;\n        this.fds = fds;\n        let self = this;\n        this.wasiImport = {\n            args_sizes_get(argc/*: number*/, argv_buf_size/*: number*/)/*: number*/ {\n                let buffer = new DataView(self.inst.exports.memory.buffer);\n                buffer.setUint32(argc, self.args.length, true);\n                let buf_size = 0;\n                for (let arg of self.args) {\n                    buf_size += arg.length + 1;\n                }\n                buffer.setUint32(argv_buf_size, buf_size, true);\n                console.log(buffer.getUint32(argc, true), buffer.getUint32(argv_buf_size, true));\n                return 0;\n            },\n            args_get(argv/*: number*/, argv_buf/*: number*/)/*: number*/ {\n                let buffer = new DataView(self.inst.exports.memory.buffer);\n                let buffer8 = new Uint8Array(self.inst.exports.memory.buffer);\n                let orig_argv_buf = argv_buf;\n                for (let i = 0; i < self.args.length; i++) {\n                    buffer.setUint32(argv, argv_buf, true);\n                    argv += 4;\n                    let arg = new TextEncoder(\"utf-8\").encode(self.args[i]);\n                    buffer8.set(arg, argv_buf);\n                    buffer.setUint8(argv_buf + arg.length, 0);\n                    argv_buf += arg.length + 1;\n                }\n                console.log(new TextDecoder(\"utf-8\").decode(buffer8.slice(orig_argv_buf, argv_buf)));\n                return 0;\n            },\n\n            environ_sizes_get(environ_count/*: number*/, environ_size/*: number*/)/*: number*/ {\n                let buffer = new DataView(self.inst.exports.memory.buffer);\n                buffer.setUint32(environ_count, self.env.length, true);\n                let buf_size = 0;\n                for (let environ of self.env) {\n                    buf_size += environ.length + 1;\n                }\n                buffer.setUint32(environ_size, buf_size, true);\n                console.log(buffer.getUint32(environ_count, true), buffer.getUint32(environ_size, true));\n                return 0;\n            },\n            environ_get(environ/*: number*/, environ_buf/*: number*/)/*: number*/ {\n                let buffer = new DataView(self.inst.exports.memory.buffer);\n                let buffer8 = new Uint8Array(self.inst.exports.memory.buffer);\n                let orig_environ_buf = environ_buf;\n                for (let i = 0; i < env.length; i++) {\n                    buffer.setUint32(environ, environ_buf, true);\n                    environ += 4;\n                    let e = new TextEncoder(\"utf-8\").encode(env[i]);\n                    buffer8.set(e, environ_buf);\n                    buffer.setUint8(environ_buf + e.length, 0);\n                    environ_buf += e.length + 1;\n                }\n                console.log(new TextDecoder(\"utf-8\").decode(buffer8.slice(orig_environ_buf, environ_buf)));\n                return 0;\n            },\n\n            clock_res_get(id/*: number*/, res_ptr/*: number*/)/*: number*/ {\n                throw \"unimplemented\";\n            },\n            clock_time_get(id/*: number*/, precision/*: BigInt*/, time/*: number*/)/*: number*/ {\n                let buffer = new DataView(self.inst.exports.memory.buffer);\n                if (id === wasi.CLOCKID_REALTIME) {\n                    buffer.setBigUint64(time, BigInt(new Date().getTime()) * 1000000n, true);\n                } else {\n                    // TODO\n                    buffer.setBigUint64(time, 0n, true);\n                }\n                return 0;\n            },\n\n            fd_advise(fd/*: number*/, offset/*: BigInt*/, len/*: BigInt*/, advice/*: number*/)/*: number*/ {\n                if (self.fds[fd] != undefined) {\n                    return self.fds[fd].fd_advise(offset, len, advice);\n                } else {\n                    return wasi.ERRNO_BADF;\n                }\n            },\n            fd_allocate(fd/*: number*/, offset/*: BigInt*/, len/*: BigInt*/)/*: number*/ {\n                if (self.fds[fd] != undefined) {\n                    return self.fds[fd].fd_allocate(offset, len);\n                } else {\n                    return wasi.ERRNO_BADF;\n                }\n            },\n            fd_close(fd/*: number*/)/*: number*/ {\n                if (self.fds[fd] != undefined) {\n                    let ret = self.fds[fd].fd_close();\n                    self.fds[fd] = undefined;\n                    return ret;\n                } else {\n                    return wasi.ERRNO_BADF;\n                }\n            },\n            fd_datasync(fd/*: number*/)/*: number*/ {\n                if (self.fds[fd] != undefined) {\n                    return self.fds[fd].fd_datasync();\n                } else {\n                    return wasi.ERRNO_BADF;\n                }\n            },\n            fd_fdstat_get(fd/*: number*/, fdstat_ptr/*: number*/)/*: number*/ {\n                if (self.fds[fd] != undefined) {\n                    let { ret, fdstat } = self.fds[fd].fd_fdstat_get();\n                    if (fdstat != null) {\n                        fdstat.write_bytes(new DataView(self.inst.exports.memory.buffer), fdstat_ptr);\n                    }\n                    return ret;\n                } else {\n                    return wasi.ERRNO_BADF;\n                }\n            },\n            fd_fdstat_set_flags(fd/*: number*/, flags/*: number*/)/*: number*/ {\n                if (self.fds[fd] != undefined) {\n                    return self.fds[fd].fd_fdstat_set_flags(flags);\n                } else {\n                    return wasi.ERRNO_BADF;\n                }\n            },\n            fd_fdstat_set_rights(fd/*: number*/, fs_rights_base/*: BigInt*/, fs_rights_inheriting/*: BigInt*/)/*: number*/ {\n                if (self.fds[fd] != undefined) {\n                    return self.fds[fd].fd_fdstat_set_rights(fs_rights_base, fs_rights_inheriting);\n                } else {\n                    return wasi.ERRNO_BADF;\n                }\n            },\n            fd_filestat_get(fd/*: number*/, filestat_ptr/*: number*/)/*: number*/ {\n                if (self.fds[fd] != undefined) {\n                    let { ret, filestat } = self.fds[fd].fd_filestat_get();\n                    if (filestat != null) {\n                        filestat.write_bytes(new DataView(self.inst.exports.memory.buffer), filestat_ptr);\n                    }\n                    return ret;\n                } else {\n                    return wasi.ERRNO_BADF;\n                }\n            },\n            fd_filestat_set_size(fd/*: number*/, size/*: BigInt*/)/*: number*/ {\n                if (self.fds[fd] != undefined) {\n                    return self.fds[fd].fd_filestat_set_size(size);\n                } else {\n                    return wasi.ERRNO_BADF;\n                }\n            },\n            fd_filestat_set_times(fd/*: number*/, atim/*: BigInt*/, mtim/*: BigInt*/, fst_flags/*: number*/)/*: number*/ {\n                if (self.fds[fd] != undefined) {\n                    return self.fds[fd].fd_filestat_set_times(atim, mtim, fst_flags);\n                } else {\n                    return wasi.ERRNO_BADF;\n                }\n            },\n            fd_pread(fd/*: number*/, iovs_ptr/*: number*/, iovs_len/*: number*/, offset/*: BigInt*/, nread_ptr/*: number*/)/*: number*/ {\n                let buffer = new DataView(self.inst.exports.memory.buffer);\n                let buffer8 = new Uint8Array(self.inst.exports.memory.buffer);\n                if (self.fds[fd] != undefined) {\n                    let iovecs = wasi.Iovec.read_bytes_array(buffer, iovs_ptr, iovs_len);\n                    let { ret, nread } = self.fds[fd].fd_pread(buffer8, iovecs, offset);\n                    buffer.setUint32(nread_ptr, nread, true);\n                    return ret;\n                } else {\n                    return wasi.ERRNO_BADF;\n                }\n            },\n            fd_prestat_get(fd/*: number*/, buf_ptr/*: number*/)/*: number*/ {\n                let buffer = new DataView(self.inst.exports.memory.buffer);\n                if (self.fds[fd] != undefined) {\n                    let { ret, prestat } = self.fds[fd].fd_prestat_get();\n                    if (prestat != null) {\n                        prestat.write_bytes(buffer, buf_ptr);\n                    }\n                    return ret;\n                } else {\n                    return wasi.ERRNO_BADF;\n                }\n            },\n            fd_prestat_dir_name(fd/*: number*/, path_ptr/*: number*/, path_len/*: number*/)/*: number*/ {\n                // FIXME don't ignore path_len\n                if (self.fds[fd] != undefined) {\n                    let { ret, prestat_dir_name } = self.fds[fd].fd_prestat_dir_name();\n                    if (prestat_dir_name != null) {\n                        let buffer8 = new Uint8Array(self.inst.exports.memory.buffer);\n                        buffer8.set(prestat_dir_name, path_ptr);\n                    }\n                    return ret;\n                } else {\n                    return wasi.ERRNO_BADF;\n                }\n            },\n            fd_pwrite(fd/*: number*/, iovs_ptr/*: number*/, iovs_len/*: number*/, offset/*: number*/, nwritten_ptr/*: number*/)/*: number*/ {\n                let buffer = new DataView(self.inst.exports.memory.buffer);\n                let buffer8 = new Uint8Array(self.inst.exports.memory.buffer);\n                if (self.fds[fd] != undefined) {\n                    let iovecs = wasi.Ciovec.read_bytes_array(buffer, iovs_ptr, iovs_len);\n                    let { ret, nwritten } = self.fds[fd].fd_pwrite(buffer8, iovecs, offset);\n                    buffer.setUint32(nwritten_ptr, nwritten, true);\n                    return ret;\n                } else {\n                    return wasi.ERRNO_BADF;\n                }\n            },\n            fd_read(fd/*: number*/, iovs_ptr/*: number*/, iovs_len/*: number*/, nread_ptr/*: number*/)/*: number*/ {\n                let buffer = new DataView(self.inst.exports.memory.buffer);\n                let buffer8 = new Uint8Array(self.inst.exports.memory.buffer);\n                if (self.fds[fd] != undefined) {\n                    let iovecs = wasi.Iovec.read_bytes_array(buffer, iovs_ptr, iovs_len);\n                    let { ret, nread } = self.fds[fd].fd_read(buffer8, iovecs);\n                    buffer.setUint32(nread_ptr, nread, true);\n                    return ret;\n                } else {\n                    return wasi.ERRNO_BADF;\n                }\n            },\n            fd_readdir(fd/*: number*/, buf/*: number*/, buf_len/*: number*/, cookie/*: BigInt*/, bufused_ptr/*: number*/)/*: number*/ {\n                let buffer = new DataView(self.inst.exports.memory.buffer);\n                let buffer8 = new Uint8Array(self.inst.exports.memory.buffer);\n                if (self.fds[fd] != undefined) {\n                    let bufused = 0;\n\n                    while (true) {\n                        let { ret, dirent } = self.fds[fd].fd_readdir_single(cookie);\n                        if (ret != 0) {\n                            buffer.setUint32(bufused_ptr, bufused, true);\n                            return ret;\n                        }\n                        if (dirent == null) {\n                            break;\n                        }\n                        let offset = dirent.length();\n\n                        if ((buf_len - bufused) < offset) {\n                            break;\n                        }\n\n                        dirent.write_bytes(buffer, buffer8, buf);\n                        buf += offset;\n                        bufused += offset;\n                        cookie = dirent.d_next;\n                    }\n\n                    buffer.setUint32(bufused_ptr, bufused, true);\n                    return 0;\n                } else {\n                    return wasi.ERRNO_BADF;\n                }\n            },\n            fd_renumber(fd/*: number*/, to/*: number*/) {\n                if (self.fds[fd] != undefined && self.fds[to] != undefined) {\n                    let ret = self.fds[to].fd_close();\n                    if (ret != 0) {\n                        return ret;\n                    }\n                    self.fds[to] = self.fds[fd];\n                    self.fds[fd] = undefined;\n                    return 0;\n                } else {\n                    return wasi.ERRNO_BADF;\n                }\n            },\n            fd_seek(fd/*: number*/, offset/*: number*/, whence/*: number*/, offset_out_ptr/*: number*/)/*: number*/ {\n                let buffer = new DataView(self.inst.exports.memory.buffer);\n                if (self.fds[fd] != undefined) {\n                    let { ret, offset_out } = self.fds[fd].fd_seek(offset, whence);\n                    buffer.setUint32(offset_out_ptr, offset_out, true);\n                    return ret;\n                } else {\n                    return wasi.ERRNO_BADF;\n                }\n            },\n            fd_sync(fd/*: number*/)/*: number*/ {\n                if (self.fds[fd] != undefined) {\n                    return self.fds[fd].fd_sync();\n                } else {\n                    return wasi.ERRNO_BADF;\n                }\n            },\n            fd_tell(fd/*: number*/, offset_ptr/*: number*/)/*: number*/ {\n                let buffer = new DataView(self.inst.exports.memory.buffer);\n                if (self.fds[fd] != undefined) {\n                    let { ret, offset } = self.fds[fd].fd_tell();\n                    buffer.setUint32(offset_ptr, offset, true);\n                    return ret;\n                } else {\n                    return wasi.ERRNO_BADF;\n                }\n            },\n            fd_write(fd/*: number*/, iovs_ptr/*: number*/, iovs_len/*: number*/, nwritten_ptr/*: number*/)/*: number*/ {\n                let buffer = new DataView(self.inst.exports.memory.buffer);\n                let buffer8 = new Uint8Array(self.inst.exports.memory.buffer);\n                if (self.fds[fd] != undefined) {\n                    let iovecs = wasi.Ciovec.read_bytes_array(buffer, iovs_ptr, iovs_len);\n                    let { ret, nwritten } = self.fds[fd].fd_write(buffer8, iovecs);\n                    buffer.setUint32(nwritten_ptr, nwritten, true);\n                    return ret;\n                } else {\n                    return wasi.ERRNO_BADF;\n                }\n            },\n            path_create_directory(fd/*: number*/, path_ptr/*: number*/, path_len/*: number*/)/*: number*/ {\n                let buffer8 = new Uint8Array(self.inst.exports.memory.buffer);\n                if (self.fds[fd] != undefined) {\n                    let path = new TextDecoder(\"utf-8\").decode(buffer8.slice(path_ptr, path_ptr + path_len));\n                    return self.fds[fd].path_create_directory(path);\n                }\n            },\n            path_filestat_get(fd/*: number*/, flags/*: number*/, path_ptr/*: number*/, path_len/*: number*/, filestat_ptr/*: number*/)/*: number*/ {\n                let buffer = new DataView(self.inst.exports.memory.buffer);\n                let buffer8 = new Uint8Array(self.inst.exports.memory.buffer);\n                if (self.fds[fd] != undefined) {\n                    let path = new TextDecoder(\"utf-8\").decode(buffer8.slice(path_ptr, path_ptr + path_len));\n                    let { ret, filestat } = self.fds[fd].path_filestat_get(flags, path);\n                    if (filestat != null) {\n                        filestat.write_bytes(buffer, filestat_ptr);\n                    }\n                    return ret;\n                } else {\n                    return wasi.ERRNO_BADF;\n                }\n            },\n            path_filestat_set_times(fd/*: number*/, flags/*: number*/, path_ptr/*: number*/, path_len/*: number*/, atim, mtim, fst_flags) {\n                let buffer8 = new Uint8Array(self.inst.exports.memory.buffer);\n                if (self.fds[fd] != undefined) {\n                    let path = new TextDecoder(\"utf-8\").decode(buffer8.slice(path_ptr, path_ptr + path_len));\n                    return self.fds[fd].path_filestat_set_times(flags, path, atim, mtim, fst_flags);\n                } else {\n                    return wasi.ERRNO_BADF;\n                }\n            },\n            path_link(old_fd/*: number*/, old_flags, old_path_ptr/*: number*/, old_path_len/*: number*/, new_fd/*: number*/, new_path_ptr/*: number*/, new_path_len/*: number*/)/*: number*/ {\n                let buffer8 = new Uint8Array(self.inst.exports.memory.buffer);\n                if (self.fds[old_fd] != undefined && self.fds[new_fd] != undefined) {\n                    let old_path = new TextDecoder(\"utf-8\").decode(buffer8.slice(old_path_ptr, old_path_ptr + old_path_len));\n                    let new_path = new TextDecoder(\"utf-8\").decode(buffer8.slice(new_path_ptr, new_path_ptr + new_path_len));\n                    return self.fds[new_fd].path_link(old_fd, old_flags, old_path, new_path);\n                } else {\n                    return wasi.ERRNO_BADF;\n                }\n            },\n            path_open(fd/*: number*/, dirflags, path_ptr/*: number*/, path_len/*: number*/, oflags, fs_rights_base, fs_rights_inheriting, fd_flags, opened_fd_ptr/*: number*/)/*: number*/ {\n                let buffer = new DataView(self.inst.exports.memory.buffer);\n                let buffer8 = new Uint8Array(self.inst.exports.memory.buffer);\n                if (self.fds[fd] != undefined) {\n                    let path = new TextDecoder(\"utf-8\").decode(buffer8.slice(path_ptr, path_ptr + path_len));\n                    console.log(path);\n                    let { ret, fd_obj } = self.fds[fd].path_open(dirflags, path, oflags, fs_rights_base, fs_rights_inheriting, fd_flags);\n                    if (ret != 0) {\n                        return ret;\n                    }\n                    // FIXME use first free fd\n                    self.fds.push(fd_obj);\n                    let opened_fd = self.fds.length - 1;\n                    buffer.setUint32(opened_fd_ptr, opened_fd, true);\n                    return 0;\n                } else {\n                    return wasi.ERRNO_BADF;\n                }\n            },\n            path_readlink(fd/*: number*/, path_ptr/*: number*/, path_len/*: number*/, buf_ptr/*: number*/, buf_len/*: number*/, nread_ptr/*: number*/)/*: number*/ {\n                let buffer = new DataView(self.inst.exports.memory.buffer);\n                let buffer8 = new Uint8Array(self.inst.exports.memory.buffer);\n                if (self.fds[fd] != undefined) {\n                    let path = new TextDecoder(\"utf-8\").decode(buffer8.slice(path_ptr, path_ptr + path_len));\n                    console.log(path);\n                    let { ret, data } = self.fds[fd].path_readlink(path);\n                    if (data != null) {\n                        if (data.length > buf_len) {\n                            buffer.setUint32(nread_ptr, 0, true);\n                            return wasi.ERRNO_BADF;\n                        }\n                        buffer8.set(data, buf_ptr);\n                        buffer.setUint32(nread_ptr, data.length, true);\n                    }\n                    return ret;\n                } else {\n                    return wasi.ERRNO_BADF;\n                }\n            },\n            path_remove_directory(fd/*: number*/, path_ptr/*: number*/, path_len/*: number*/)/*: number*/ {\n                let buffer8 = new Uint8Array(self.inst.exports.memory.buffer);\n                if (self.fds[fd] != undefined) {\n                    let path = new TextDecoder(\"utf-8\").decode(buffer8.slice(path_ptr, path_ptr + path_len));\n                    return self.fds[fd].path_remove_directory(path);\n                } else {\n                    return wasi.ERRNO_BADF;\n                }\n            },\n            path_rename(fd/*: number*/, old_path_ptr/*: number*/, old_path_len/*: number*/, new_fd/*: number*/, new_path_ptr/*: number*/, new_path_len/*: number*/)/*: number*/ {\n                throw \"FIXME what is the best abstraction for this?\";\n            },\n            path_symlink(old_path_ptr/*: number*/, old_path_len/*: number*/, fd/*: number*/, new_path_ptr/*: number*/, new_path_len/*: number*/)/*: number*/ {\n                let buffer8 = new Uint8Array(self.inst.exports.memory.buffer);\n                if (self.fds[fd] != undefined) {\n                    let old_path = new TextDecoder(\"utf-8\").decode(buffer8.slice(old_path_ptr, old_path_ptr + old_path_len));\n                    let new_path = new TextDecoder(\"utf-8\").decode(buffer8.slice(new_path_ptr, new_path_ptr + new_path_len));\n                    return self.fds[fd].path_symlink(old_path, new_path);\n                } else {\n                    return wasi.ERRNO_BADF;\n                }\n            },\n            path_unlink_file(fd/*: number*/, path_ptr/*: number*/, path_len/*: number*/)/*: number*/ {\n                let buffer8 = new Uint8Array(self.inst.exports.memory.buffer);\n                if (self.fds[fd] != undefined) {\n                    let path = new TextDecoder(\"utf-8\").decode(buffer8.slice(path_ptr, path_ptr + path_len));\n                    return self.fds[fd].path_unlink_file(path);\n                } else {\n                    return wasi.ERRNO_BADF;\n                }\n            },\n            poll_oneoff(in_, out, nsubscriptions) {\n                throw \"async io not supported\";\n            },\n            proc_exit(exit_code/*: number*/) {\n                throw \"exit with exit code \" + exit_code;\n            },\n            proc_raise(sig/*: number*/) {\n                throw \"raised signal \" + sig;\n            },\n            sched_yield() {},\n            random_get(buf/*: number*/, buf_len/*: number*/) {\n                let buffer8 = new Uint8Array(self.inst.exports.memory.buffer);\n                for (let i = 0; i < buf_len; i++) {\n                    buffer8[buf + i] = (Math.random() * 256) | 0;\n                }\n            },\n            sock_recv(fd/*: number*/, ri_data, ri_flags) {\n                throw \"sockets not supported\";\n            },\n            sock_send(fd/*: number*/, si_data, si_flags) {\n                throw \"sockets not supported\";\n            },\n            sock_shutdown(fd/*: number*/, how) {\n                throw \"sockets not supported\";\n            }\n        };\n    }\n}\n","// @flow\n\n/*::declare function strace<T>(imports: T, no_trace: Array<String>): T*/\n\nexport function strace(imports, no_trace) {\n    return new Proxy(imports, {\n        get(target, prop, receiver) {\n            let res = Reflect.get(...arguments);\n            if (no_trace.includes(prop)) {\n                return res;\n            }\n            return function(...args) {\n                console.log(prop, \"(\", ...args, \")\");\n                return Reflect.apply(res, receiver, args);\n            }\n        }\n    });\n}\n"],"names":["$eb796989f9a2f5d2$export$a6d8551163b25e7d","static","view","ptr","iovec","buf","getUint32","buf_len","len","iovecs","i","push","read_bytes","$eb796989f9a2f5d2$export$9433c4a0191b4507","$eb796989f9a2f5d2$export$c7179ef11cae3382","d_ino","constructor","next_cookie","name","type","encoded_name","TextEncoder","encode","this","d_next","d_namlen","byteLength","d_type","dir_name","length","write_bytes","view8","setBigUint64","setUint32","setUint8","set","$eb796989f9a2f5d2$export$548d19b2b1235676","fs_rights_base","fs_rights_inherited","filetype","flags","fs_filetype","fs_flags","setUint16","$eb796989f9a2f5d2$export$5ccc6d59695a08","dev","ino","nlink","atim","mtim","ctim","size","BigInt","$eb796989f9a2f5d2$export$9a84b57910e83b78","name_len","pr_name_len","$eb796989f9a2f5d2$export$8b650493b9c7ba11","prestat","tag","inner","$b11782fc7679e2c7$export$c0a50da58385506f","fd_advise","offset","advice","fd_allocate","fd_close","fd_datasync","fd_fdstat_get","ret","fdstat","fd_fdstat_set_flags","fd_fdstat_set_rights","fs_rights_inheriting","fd_filestat_get","filestat","fd_filestat_set_size","fd_filestat_set_times","fst_flags","fd_pread","iovs","nread","fd_prestat_get","fd_prestat_dir_name","path_ptr","path_len","prestat_dir_name","fd_pwrite","nwritten","fd_read","fd_readdir_single","cookie","dirent","fd_seek","whence","fd_sync","fd_tell","fd_write","path_create_directory","path","path_filestat_get","path_filestat_set_times","path_link","old_fd","old_flags","old_path","new_path","path_open","dirflags","oflags","fdflags","fd_obj","path_readlink","data","path_remove_directory","path_rename","new_fd","path_symlink","path_unlink_file","$45218802e4988f25$export$b6afa8811b7e644e","console","log","Uint8Array","stat","truncate","$45218802e4988f25$export$1dbf9926a0d54d98","contents","get_entry_for_path","entry","component","split","undefined","create_entry_for_path","components","filter","ArrayBuffer","$ea61afdfb739d189$export$f0382002eea5fa78","file_pos","file","super","slice","Number","calculated_offset","buffer","old","$ea61afdfb739d189$export$3bdf71105e7d4134","dir","Object","keys","fd_flags","$5a07d8d516450e70$var$bufferAt","pos","$5a07d8d516450e70$var$exports","memory","$5a07d8d516450e70$var$withCStrings","strs","op","r","map","str","s","l","p","callocBuffer","forEach","freeBuffer","$5a07d8d516450e70$var$withCString","$5a07d8d516450e70$var$fromCString","cstr","TextDecoder","decode","b","findIndex","$5a07d8d516450e70$var$cstringBufferAt","$5a07d8d516450e70$var$store_size","$5a07d8d516450e70$var$store_save","k","v","a","save","$5a07d8d516450e70$var$store_load","load","$7e44c88be0ec5bbe$exports","args","env","fds","inst","wasiImport","start","instance","exports","_start","self","args_sizes_get","argc","argv_buf_size","DataView","buf_size","arg","args_get","argv","argv_buf","buffer8","orig_argv_buf","environ_sizes_get","environ_count","environ_size","environ","environ_get","environ_buf","orig_environ_buf","e","clock_res_get","id","res_ptr","clock_time_get","precision","time","Date","getTime","fd","fdstat_ptr","filestat_ptr","iovs_ptr","iovs_len","nread_ptr","read_bytes_array","buf_ptr","nwritten_ptr","fd_readdir","bufused_ptr","bufused","fd_renumber","to","offset_out_ptr","offset_out","offset_ptr","old_path_ptr","old_path_len","new_path_ptr","new_path_len","opened_fd_ptr","opened_fd","poll_oneoff","in_","out","nsubscriptions","proc_exit","exit_code","proc_raise","sig","sched_yield","random_get","Math","random","sock_recv","ri_data","ri_flags","sock_send","si_data","si_flags","sock_shutdown","how","prestat_name","imports","no_trace","Proxy","get","target","prop","receiver","res","Reflect","arguments","includes","apply","$5a07d8d516450e70$var$canvas","document","getElementById","$5a07d8d516450e70$var$width","$5a07d8d516450e70$var$height","$5a07d8d516450e70$var$ctx","getContext","$5a07d8d516450e70$var$cellSize","width","height","$5a07d8d516450e70$var$wasi","WASI","$5a07d8d516450e70$var$test","echo","$5a07d8d516450e70$var$wasiImportObj","wasi_snapshot_preview1","$5a07d8d516450e70$var$wasm","WebAssembly","instantiateStreaming","fetch","async","$5a07d8d516450e70$var$update","window","direction","updateGameStateIO","gameStateStr","clearRect","rows","trim","y","x","c","fillStyle","fillRect","$5a07d8d516450e70$var$draw","Promise","resolve","setTimeout","isRunning","requestAnimationFrame","_initialize","hs_init","addEventListener","event","key","stop"],"version":3,"file":"index.19b8bdb1.js.map"}